# -*- Mode: Shell-Script -*-
#
# Getopt::Gen specification for moot
#-----------------------------------------------------------------------------
program "mootrain"
#program_version "0.01"

purpose	"moocow's trainer for HMM part-of-speech taggers/disambiguators."
author  "Bryan Jurish <moocow@ling.uni-potsdam.de>"
on_reparse "warn"

#-----------------------------------------------------------------------------
# Details
#-----------------------------------------------------------------------------
details "
'mootrain' gathers training data for HMM disambiguators used
by 'moothmm' and 'moot'.
"

#-----------------------------------------------------------------------------
# Files
#-----------------------------------------------------------------------------
rcfile "/etc/mootrainrc"
rcfile "~/.mootrainrc"


#-----------------------------------------------------------------------------
# Arguments
#-----------------------------------------------------------------------------
argument "INPUT(s)" "Tagged input corpus file(s)." \
    details="
Input files should be in much the same format as that accepted
by Thorsten Brants' tnt-para(1) program: one token per line,
tags and tokens separated by a single TAB character.  A blank
line indicates a sentence boundary.  The initial analysis for
each token is considered the 'best' analysis.  Subsequent
analyses are used to construct lexical class frequencies.
See L<mootfiles> for details.
"

#-----------------------------------------------------------------------------
# Options
#-----------------------------------------------------------------------------
#group "Basic Options"
int "verbose" v "Verbosity level." \
    arg="LEVEL" \
    default="2" \
    details="Be more or less verbose.  Recognized values are in the range 0..3."

string "output" o "Specify basename for output files (default=INPUT)"

flag "lex" l "Generate only lexical frequency file." \
    default="0"

flag "ngrams"	n "Generate only n-gram frequency file." \
    default="0"

flag "classes"	C "Generate only lexical-class frequency file." \
    default="0"


#-----------------------------------------------------------------------------
# Format Options
#-----------------------------------------------------------------------------

group "Format Options"

string "eos-tag" e "Specify boundary tag (default=__$)" \
  arg="TAG" \
  default="__$" \
  details="
This is the pseudo-tag used in the n-gram model file to represent
sentence boundaries, both beginning- and end-of-sentence.  It should
not be an element of the actual tag-set -- that is, it should not
be a valid analysis for any token.
"

#int "kmax" k "Specify maximum n-gram length (default=3)" \
#  argh="LENGTH" \
#  default="3" \
#  details="
#Specifying any value less than 3 may cause lambda estimation
#to fail miserably in mootHMM and/or mootCHMM -- don't do it.
#"

flag "verbose-ngrams" N "Generate long-form ngrams (default=no)"

#-----------------------------------------------------------------------------
# Addenda
#-----------------------------------------------------------------------------
addenda "

=head2 Model Files

The mootrain program produces text-format model files for use with
moothmm(1) and/or moot(1).
See L<mootfiles> for details on the format of these files.

When specifiying a text model with the '--output' option, you may
specifiy:

  --output=TMODEL

in order to use the files 'TMODEL.lex', 'TMODEL.123', and 'TMODEL.clx'
or you may specify the component model files individually, by:

  --output=TMODEL.lex,TMODEL.123,TMODEL.clx

Existing files will be overwritten.
"

#-----------------------------------------------------------------------------
# Bugs
#-----------------------------------------------------------------------------
bugs "

Only ca. 99.998% compatible with tnt-para(1).

"

#-----------------------------------------------------------------------------
# Footer
#-----------------------------------------------------------------------------
acknowledge `cat acknowledge.pod`

seealso "L<mootpp>, L<moothmm>, L<moot>"
