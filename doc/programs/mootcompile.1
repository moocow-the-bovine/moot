.\" Automatically generated by Pod::Man 2.25 (Pod::Simple 3.16)
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  \*(C+ will
.\" give a nicer C++.  Capital omega is used to do unbreakable dashes and
.\" therefore won't be available.  \*(C` and \*(C' expand to `' in nroff,
.\" nothing in troff, for use with C<>.
.tr \(*W-
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" Escape single quotes in literal strings from groff's Unicode transform.
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.SS), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.ie \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.el \{\
.    de IX
..
.\}
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "MOOTCOMPILE 1"
.TH MOOTCOMPILE 1 "2013-11-18" "moot v2.0.10-pre2" "moot PoS Tagger"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.if n .ad l
.nh
.SH "NAME"
mootcompile \- moocow's HMM part\-of\-speech tagger/disambiguator: model compiler.
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
mootcompile [\s-1OPTIONS\s0] \s-1MODEL\s0
.PP
.Vb 2
\& Arguments:
\&    MODEL  Text\-format input model.
\&
\& Options
\&    \-h        \-\-help                       Print help and exit.
\&    \-V        \-\-version                    Print version and exit.
\&    \-cFILE    \-\-rcfile=FILE                Read an alternate configuration file.
\&    \-vLEVEL   \-\-verbose=LEVEL              Verbosity level.
\&    \-B        \-\-no\-banner                  Suppress initial banner message (implied at verbosity levels <= 2)
\&    \-oFILE    \-\-output=FILE                Specify output file (default=stdout).
\&    \-zLEVEL   \-\-compress=LEVEL             Compression level for output file.
\&
\& HMM Options
\&    \-gBOOL    \-\-hash\-ngrams=BOOL           Whether to hash stored n\-grams (default=no)
\&    \-aLEN     \-\-trie\-depth=LEN             Maximum depth of suffix trie.
\&    \-AFREQ    \-\-trie\-threshhold=FREQ       Frequency upper bound for trie inclusion.
\&              \-\-trie\-theta=FLOAT           Suffix backoff coefficient.
\&    \-LBOOL    \-\-use\-classes=BOOL           Whether to use lexical class\-probabilities.
\&    \-FBOOL    \-\-use\-flavors=BOOL           Whether to use token \*(Aqflavor\*(Aq heuristics (default=1 (true))
\&    \-RBOOL    \-\-relax=BOOL                 Whether to relax token\-tag associability (default=1 (true))
\&    \-NFLOATS  \-\-nlambdas=FLOATS            N\-Gram smoothing constants (default=estimate)
\&    \-WFLOATS  \-\-wlambdas=FLOATS            Lexical smoothing constants (default=estimate)
\&    \-CFLOATS  \-\-clambdas=FLOATS            Lexical\-class smoothing constants (default=estimate)
\&    \-tDOUBLE  \-\-unknown\-threshhold=DOUBLE  Freq. threshhold for \*(Aqunknown\*(Aq lexical probabilities
\&    \-TDOUBLE  \-\-class\-threshhold=DOUBLE    Freq. threshhold for \*(Aqunknown\*(Aq class probabilities
\&    \-uNAME    \-\-unknown\-token=NAME         Symbolic name of the \*(Aqunknown\*(Aq token
\&    \-UNAME    \-\-unknown\-tag=NAME           Symbolic name of the \*(Aqunknown\*(Aq tag
\&    \-eTAG     \-\-eos\-tag=TAG                Specify boundary tag (default=_\|_$)
\&    \-ZDOUBLE  \-\-beam\-width=DOUBLE          Specify cutoff factor for beam pruning
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
moocow's \s-1HMM\s0 part-of-speech tagger/disambiguator: model compiler.
.PP
\&'mootcompile' compiles binary Hidden Markov Model parameter
files for use with the '\fImoot\fR\|(1)' program
from one or more text model files.
.PP
See mootfiles for details on moot model file formats.
.SH "ARGUMENTS"
.IX Header "ARGUMENTS"
.ie n .IP """MODEL""" 4
.el .IP "\f(CWMODEL\fR" 4
.IX Item "MODEL"
Text-format input model.
.Sp
For details on moot file formats, see mootfiles.
.SH "OPTIONS"
.IX Header "OPTIONS"
.ie n .IP """\-\-help"" , ""\-h""" 4
.el .IP "\f(CW\-\-help\fR , \f(CW\-h\fR" 4
.IX Item "--help , -h"
Print help and exit.
.Sp
Default: '0'
.ie n .IP """\-\-version"" , ""\-V""" 4
.el .IP "\f(CW\-\-version\fR , \f(CW\-V\fR" 4
.IX Item "--version , -V"
Print version and exit.
.Sp
Default: '0'
.ie n .IP """\-\-rcfile=FILE"" , ""\-cFILE""" 4
.el .IP "\f(CW\-\-rcfile=FILE\fR , \f(CW\-cFILE\fR" 4
.IX Item "--rcfile=FILE , -cFILE"
Read an alternate configuration file.
.Sp
Default: '\s-1NULL\s0'
.Sp
See also: \*(L"\s-1CONFIGURATION\s0 \s-1FILES\s0\*(R".
.ie n .IP """\-\-verbose=LEVEL"" , ""\-vLEVEL""" 4
.el .IP "\f(CW\-\-verbose=LEVEL\fR , \f(CW\-vLEVEL\fR" 4
.IX Item "--verbose=LEVEL , -vLEVEL"
Verbosity level.
.Sp
Default: '4'
.Sp
Be more or less verbose.  Recognized values are in the range 0..6:
.RS 4
.IP "0 (silent)" 4
.IX Item "0 (silent)"
Disable all diagnostic messages.
.IP "1 (errors)" 4
.IX Item "1 (errors)"
Print error messages to stderr.
.IP "2 (warnings)" 4
.IX Item "2 (warnings)"
Print warnings to stderr.
.IP "3 (info)" 4
.IX Item "3 (info)"
Print general diagnostic information to stderr.
.IP "4 (progress)" 4
.IX Item "4 (progress)"
Print progress information to stderr.
.IP "5 (debug)" 4
.IX Item "5 (debug)"
Print debugging information to stderr (if applicable).
.IP "6 (trace)" 4
.IX Item "6 (trace)"
Print execution trace information to stderr (if applicable).
.RE
.RS 4
.RE
.ie n .IP """\-\-no\-banner"" , ""\-B""" 4
.el .IP "\f(CW\-\-no\-banner\fR , \f(CW\-B\fR" 4
.IX Item "--no-banner , -B"
Suppress initial banner message (implied at verbosity levels <= 2)
.Sp
Default: '0'
.ie n .IP """\-\-output=FILE"" , ""\-oFILE""" 4
.el .IP "\f(CW\-\-output=FILE\fR , \f(CW\-oFILE\fR" 4
.IX Item "--output=FILE , -oFILE"
Specify output file (default=stdout).
.Sp
Default: '\-'
.Sp
Binary model will be written to \s-1FILE\s0.
.ie n .IP """\-\-compress=LEVEL"" , ""\-zLEVEL""" 4
.el .IP "\f(CW\-\-compress=LEVEL\fR , \f(CW\-zLEVEL\fR" 4
.IX Item "--compress=LEVEL , -zLEVEL"
Compression level for output file.
.Sp
Default: '\-1'
.SS "\s-1HMM\s0 Options"
.IX Subsection "HMM Options"
.ie n .IP """\-\-hash\-ngrams=BOOL"" , ""\-gBOOL""" 4
.el .IP "\f(CW\-\-hash\-ngrams=BOOL\fR , \f(CW\-gBOOL\fR" 4
.IX Item "--hash-ngrams=BOOL , -gBOOL"
Whether to hash stored n\-grams (default=no)
.Sp
Default: '0'
.Sp
If nonzero, tag n\-grams will be stored in a slow but memory-friendly
hash.  Otherwise, a fast but large array will be used.
.ie n .IP """\-\-trie\-depth=LEN"" , ""\-aLEN""" 4
.el .IP "\f(CW\-\-trie\-depth=LEN\fR , \f(CW\-aLEN\fR" 4
.IX Item "--trie-depth=LEN , -aLEN"
Maximum depth of suffix trie.
.Sp
Default: '0'
.Sp
Use suffixes of up to \s-1LEN\s0 characters to estimate probabilities
of unknown words.  A value of 0 (zero) disables use of a suffix trie.
.Sp
\&\s-1EXPERIMENTAL\s0.
.ie n .IP """\-\-trie\-threshhold=FREQ"" , ""\-AFREQ""" 4
.el .IP "\f(CW\-\-trie\-threshhold=FREQ\fR , \f(CW\-AFREQ\fR" 4
.IX Item "--trie-threshhold=FREQ , -AFREQ"
Frequency upper bound for trie inclusion.
.Sp
Default: '10'
.Sp
Use words of at most frequency \s-1FREQ\s0 to construct the suffix trie.
.ie n .IP """\-\-trie\-theta=FLOAT""" 4
.el .IP "\f(CW\-\-trie\-theta=FLOAT\fR" 4
.IX Item "--trie-theta=FLOAT"
Suffix backoff coefficient.
.Sp
Default: '0'
.Sp
Specify suffix-trie backoff coefficient for smoothing.
Specifying a value of zero (the default) causes the
smoothing coefficient to be estimated.
.ie n .IP """\-\-use\-classes=BOOL"" , ""\-LBOOL""" 4
.el .IP "\f(CW\-\-use\-classes=BOOL\fR , \f(CW\-LBOOL\fR" 4
.IX Item "--use-classes=BOOL , -LBOOL"
Whether to use lexical class-probabilities.
.Sp
Default: '1'
.Sp
Only useful if your file contains a priori analyses.
Default behavior is to try and use classes if you specify
a non-empty class-frequency file.
.ie n .IP """\-\-use\-flavors=BOOL"" , ""\-FBOOL""" 4
.el .IP "\f(CW\-\-use\-flavors=BOOL\fR , \f(CW\-FBOOL\fR" 4
.IX Item "--use-flavors=BOOL , -FBOOL"
Whether to use token 'flavor' heuristics (default=1 (true))
.Sp
Default: '1'
.Sp
Default behavior is to use flavor heuristics as specified by the model (usually built-in).
.ie n .IP """\-\-relax=BOOL"" , ""\-RBOOL""" 4
.el .IP "\f(CW\-\-relax=BOOL\fR , \f(CW\-RBOOL\fR" 4
.IX Item "--relax=BOOL , -RBOOL"
Whether to relax token-tag associability (default=1 (true))
.Sp
Default: '1'
.Sp
If nonzero, 'tag' fields of token analyses will be used only as a potential
estimator of lexical probability, if at all.
Otherwise (regardless of whether lexical classes are are being used as a
probability estimator), 'tag' fields of token analyses will be interpreted
as imposing 'hard' restrictions on which tags may occur with the token in question.
.Sp
See the \f(CW\*(C`\-\-use\-classes=BOOL\*(C'\fR option and/or mootfiles for more details on the
use of lexical classes.
.ie n .IP """\-\-nlambdas=FLOATS"" , ""\-NFLOATS""" 4
.el .IP "\f(CW\-\-nlambdas=FLOATS\fR , \f(CW\-NFLOATS\fR" 4
.IX Item "--nlambdas=FLOATS , -NFLOATS"
N\-Gram smoothing constants (default=estimate)
.Sp
Default: '\s-1NULL\s0'
.Sp
\&\s-1FLOATS\s0 should be a string of the form \*(L"\s-1LAMBDA1\s0,LAMBDA2,LAMBDA3\*(R"
(without the quotes), where each LAMBDA$i is a floating-point constant.
.RS 4
.IP "\s-1LAMBDA_1\s0" 4
.IX Item "LAMBDA_1"
is the constant smoothing coefficient for unigram probabilities,
.IP "\s-1LAMBDA_2\s0" 4
.IX Item "LAMBDA_2"
is the constant smoothing coefficient for bigram probabilities,
.IP "\s-1LAMBDA_3\s0" 4
.IX Item "LAMBDA_3"
is the constant smoothing coefficient for trigram probabilities
(only meaningful if libmoot was built with '\-\-enable\-trigrams=yes'.
See the output of
.Sp
.Vb 1
\& mootconfig \-\-options
.Ve
.Sp
for details.
.RE
.RS 4
.Sp
If you override the default values, you should choose values such that
\&\s-1LAMBDA_1\s0 + \s-1LAMBDA_2\s0 + \s-1LAMBDA_3\s0 == 1.0.
.RE
.ie n .IP """\-\-wlambdas=FLOATS"" , ""\-WFLOATS""" 4
.el .IP "\f(CW\-\-wlambdas=FLOATS\fR , \f(CW\-WFLOATS\fR" 4
.IX Item "--wlambdas=FLOATS , -WFLOATS"
Lexical smoothing constants (default=estimate)
.Sp
Default: '\s-1NULL\s0'
.Sp
\&\s-1FLOATS\s0 should be a string of the form \*(L"\s-1LAMBDA_W0\s0,LAMBDA_W1\*(R"
(without the quotes), where each LAMBDA_W$i is a floating-point
constant.
.RS 4
.IP "\s-1LAMBDA_W0\s0" 4
.IX Item "LAMBDA_W0"
is the constant minimum lexical probability,
.IP "\s-1LAMBDA_W1\s0" 4
.IX Item "LAMBDA_W1"
is the constant smoothing coefficient for lexical probabilities.
.RE
.RS 4
.Sp
If you override the default values, you should choose values such that
\&\s-1LAMBDA_W0\s0 + \s-1LAMBDA_W1\s0 == 1.0.
.RE
.ie n .IP """\-\-clambdas=FLOATS"" , ""\-CFLOATS""" 4
.el .IP "\f(CW\-\-clambdas=FLOATS\fR , \f(CW\-CFLOATS\fR" 4
.IX Item "--clambdas=FLOATS , -CFLOATS"
Lexical-class smoothing constants (default=estimate)
.Sp
Default: '\s-1NULL\s0'
.Sp
\&\s-1LAMBDAS\s0 should be a string of the form \*(L"\s-1LAMBDA_C0\s0,LAMBDA_C1\*(R"
(without the quotes), where each LAMBDA_C$i is a floating-point constant.
.RS 4
.IP "\s-1LAMBDA_C0\s0" 4
.IX Item "LAMBDA_C0"
is the constant minimum lexical-class probability,
.IP "\s-1LAMBDA_C1\s0" 4
.IX Item "LAMBDA_C1"
is the constant smoothing coefficient for lexical-class probabilities.
.RE
.RS 4
.Sp
If you override the default values, you should choose values such that
\&\s-1LAMBDA_C0\s0 + \s-1LAMBDA_C1\s0 == 1.0.
.RE
.ie n .IP """\-\-unknown\-threshhold=DOUBLE"" , ""\-tDOUBLE""" 4
.el .IP "\f(CW\-\-unknown\-threshhold=DOUBLE\fR , \f(CW\-tDOUBLE\fR" 4
.IX Item "--unknown-threshhold=DOUBLE , -tDOUBLE"
Freq. threshhold for 'unknown' lexical probabilities
.Sp
Default: '1.0'
.Sp
Lexical probabilities for unknown tokens in the input are estimated
from tokens which occur at most \s-1FLOAT\s0 times in the model.
.ie n .IP """\-\-class\-threshhold=DOUBLE"" , ""\-TDOUBLE""" 4
.el .IP "\f(CW\-\-class\-threshhold=DOUBLE\fR , \f(CW\-TDOUBLE\fR" 4
.IX Item "--class-threshhold=DOUBLE , -TDOUBLE"
Freq. threshhold for 'unknown' class probabilities
.Sp
Default: '1.0'
.Sp
Class probabilities for unrecognized tokens  in the input are estimated
from classes which occur at most \s-1FLOAT\s0 times in the model
and/or from the empty class.
.ie n .IP """\-\-unknown\-token=NAME"" , ""\-uNAME""" 4
.el .IP "\f(CW\-\-unknown\-token=NAME\fR , \f(CW\-uNAME\fR" 4
.IX Item "--unknown-token=NAME , -uNAME"
Symbolic name of the 'unknown' token
.Sp
Default: '@UNKNOWN'
.Sp
You can use this value to include lexical frequency information
for unknown input tokens in the lexical model file.
.ie n .IP """\-\-unknown\-tag=NAME"" , ""\-UNAME""" 4
.el .IP "\f(CW\-\-unknown\-tag=NAME\fR , \f(CW\-UNAME\fR" 4
.IX Item "--unknown-tag=NAME , -UNAME"
Symbolic name of the 'unknown' tag
.Sp
Default: '\s-1UNKNOWN\s0'
.Sp
You should never see or need this tag.
.ie n .IP """\-\-eos\-tag=TAG"" , ""\-eTAG""" 4
.el .IP "\f(CW\-\-eos\-tag=TAG\fR , \f(CW\-eTAG\fR" 4
.IX Item "--eos-tag=TAG , -eTAG"
Specify boundary tag (default=_\|_$)
.Sp
Default: '_\|_$'
.Sp
This is the pseudo-tag used in the n\-gram model file to represent
sentence boundaries, both beginning\- and end-of-sentence.  It should
not be an element of the actual tag-set \*(-- that is, it should not
be a valid analysis for any token.
.ie n .IP """\-\-beam\-width=DOUBLE"" , ""\-ZDOUBLE""" 4
.el .IP "\f(CW\-\-beam\-width=DOUBLE\fR , \f(CW\-ZDOUBLE\fR" 4
.IX Item "--beam-width=DOUBLE , -ZDOUBLE"
Specify cutoff factor for beam pruning
.Sp
Default: '1000'
.Sp
During Viterbi search, paths will be ignored if their probabilities
are less than 1/NUM*p_best , where p_best is the probability of
the current best path.  Setting this option to zero disables
beam pruning.
.SH "CONFIGURATION FILES"
.IX Header "CONFIGURATION FILES"
Configuration files are expected to contain lines of the form:
.PP
.Vb 1
\&    LONG_OPTION_NAME    OPTION_VALUE
.Ve
.PP
where \s-1LONG_OPTION_NAME\s0 is the long name of some option,
without the leading '\-\-', and \s-1OPTION_VALUE\s0 is the value for
that option, if any.  Fields are whitespace-separated.
Blank lines and comments (lines beginning with '#')
are ignored.
.PP
The following configuration files are read by default:
.IP "\(bu" 4
/etc/mootcompilerc
.IP "\(bu" 4
~/.mootcompilerc
.SH "ADDENDA"
.IX Header "ADDENDA"
.SS "About this Document"
.IX Subsection "About this Document"
Documentation file auto-generated by optgen.perl version 0.07
using Getopt::Gen version 0.13.
Translation was initiated
as:
.PP
.Vb 1
\&   optgen.perl \-l \-\-nocfile \-\-nohfile \-\-notimestamp \-F mootcompile mootcompile.gog
.Ve
.SH "BUGS AND LIMITATIONS"
.IX Header "BUGS AND LIMITATIONS"
None known.
.SH "ACKNOWLEDGEMENTS"
.IX Header "ACKNOWLEDGEMENTS"
Initial development of the this was supported by the project
\&'Kollokationen im Wo\*:rterbuch'
( \*(L"collocations in the dictionary\*(R", http://www.bbaw.de/forschung/kollokationen )
in association with the project
\&'Digitales Wo\*:rterbuch der deutschen Sprache des 20. Jahrhunderts (\s-1DWDS\s0)'
( \*(L"digital dictionary of the German language of the 20th century\*(R", http://www.dwds.de )
at the Berlin-Brandenburgische Akademie der Wissenschaften ( http://www.bbaw.de )
with funding from
the Alexander von Humboldt Stiftung ( http://www.avh.de )
and from the Zukunftsinvestitionsprogramm of the
German federal government.
Development of the DynHMM and \s-1WASTE\s0 extensions was
supported by the DFG-funded projects
\&'Deutsches Textarchiv' ( \*(L"German text archive\*(R", http://www.deutschestextarchiv.de )
and '\s-1DLEX\s0'
at the Berlin-Brandenburgische Akademie der Wissenschaften.
.PP
The authors are grateful to Christiane Fellbaum, Alexander Geyken,
Gerald Neumann, Edmund Pohl, Alexey Sokirko, and others
for offering useful insights in the course of development
of this package.
Thomas Hanneforth wrote and maintains the libFSM \*(C+ library
for finite-state device operations used by the
class-based \s-1HMM\s0 tagger / disambiguator, without which
moot could not have been built.
Alexander Geyken and Thomas Hanneforth developed the
rule-based morphological analysis system for German
which was used in the development and testing of the
class-based \s-1HMM\s0 tagger / disambiguator.
.SH "AUTHOR"
.IX Header "AUTHOR"
Bryan Jurish <moocow@cpan.org>
.SH "SEE ALSO"
.IX Header "SEE ALSO"
mootfiles
\&\fImootm\fR\|(1),
mootrain,
mootdump,
moot
