/* -*- Mode: C++ -*- */
/** 
\mainpage libdwdst: (K)DWDS PoS tagging library

\author Bryan Jurish <moocow@ling.uni-potsdam.de>

\version @PACKAGE_VERSION@



\section Intro Introduction

libdwdst is a C++ library for Part-of-Speech (PoS) tagging.
In addition to traditional bigram tagging routines, libdwdst
allows the use of a user-defined morphological analyzer in
the form of a finite state transducer, which has been shown
to lead to a reduction in errors of up to 21% with respect
to traditional Hidden-Markov-Model (HMM) methods.



\section PP Preprocessing

libdwdst includes a rudimentary preprocessor for raw text,
which tokenizes an input stream, and eliminates most SGML
markup.

\see dwdstPPLexer
\see <A HREF="../../programs/dwdspp.html">dwspp(1)</A>


\section HMM HMM Tagging

The \link dwdst::dwdstHMM dwdstHMM\endlink class provides a fast interface to traditional HMM
tagging and disambiguation.

\todo Write a faster HMM trainer -- for now, use dwdst::dwdstHMMTrainer.

\see \link dwdst::dwdstHMM dwdstHMM\endlink
\see <A HREF="../../programs/dwdshmm.html">dwdshmm(1)



\section Morph Morphological Analysis

The \link dwdst::dwdstMorph dwdstMorph\endlink
class is designed to be a wrapper for a user-defined
finite-state morphological analyzer using Thomas Hanneforth's libFSM
library.  You must provide the FSMSymSpec object to use for lookup
as well as an FSM object representing the analyzer itself.  Additionally,
you may specify a tag-extraction transducer (yet another FSM) which
maps morphological output paths to PoS tags.

\see \link dwdst::dwdstMorph dwdstMorph\endlink
\see <A HREF="../../programs/dwdsm.html">dwdsm(1)</A>



\section CHMM HMM Tagging with Morphological Classes

The \link dwdst::dwdstCHMM dwdstCHMM\endlink class performs Hidden-Markov-Model tagging and
disambiguation.  Based on dwdst::dwdstHMM, dwdst::dwdstCHMM
additionally gathers statistics on morphological ambiguity classes
(sets of PoS tags) returned by a dwdstMorph morphological
analyzer for its training data, and uses this data in the
absence of token-specific information.  dwdstCHMM can also
use a cache to store morphological analyses for the most
frequent known tokens, which provides a significant speed
improvement (3x) with respect to dwdstMorph on its own.

\see \link dwdst::dwdstCHMM dwdstCHMM\endlink
\see <A HREF="../../programs/dwdst.html">dwdst(1)</A>



\section Ack Acknowledgements

This package was developed as part of the DWDS/Collocations project
('Kollokationen im digitalen W&ouml;rterbuch der deutschen Sprache'
= 'collocations in the digital dictionary of the German language') at the
Berlin-Brandenburgische Akademie der Wissenschaften.
For details on the DWDS project, visit: http://www.dwds.de.

libFSM finite state machine C++ library by Thomas Hanneforth.


\section SeeAlso More Information

\see FSM
\see <A HREF="../../programs/dwdspp.html">dwdspp(1)</A>
\see <A HREF="../../programs/dwdstrain.html">dwdstrain(1)</A>
\see <A HREF="../../programs/dwdshmm.html">dwdshmm(1)</A>
\see <A HREF="../../programs/dwdsm.html">dwdsm(1)</A>
\see <A HREF="../../programs/dwdst.html">dwdst(1)</A>

*/
