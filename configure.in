dnl Process this file with autoconf to produce a configure script.
AC_PREREQ(2.5)

AC_INIT(dwdst, [0.0.4], [moocow@ling.uni-potsdam.de])

dnl
dnl source && aux dir
dnl
AC_CONFIG_AUX_DIR(config)

dnl
dnl use automake
dnl
AM_INIT_AUTOMAKE(dwdst, [0.0.4])

dnl
dnl use autoheader
dnl
AM_CONFIG_HEADER([src/libdwdst/dwdstConfig.h])
AH_TOP([
/*
 * Avoid conflicts with other autotools packages (i.e. FSMlib)
 * Thu Jan 30 02:38:32 CET 2003: hack removed.
 */
/*#include <cleanConfig.h>*/
])
dnl AH_BOTTOM([/*
dnl /* PACKAGE does not jive well with multiple-program pacakges
dnl    using 'gengetopt'.  'autoheader' doesn't like to undefine
dnl    it, so we include an extra little header file to do that
dnl    --> REVOKED v0.0.3
dnl   */
dnl /*#include "nopackage.h"*/
dnl ])


dnl
dnl default prefix
dnl
AC_PREFIX_DEFAULT(/usr/local)

dnl
dnl check for programs
dnl
AC_PROG_CC
AC_PROG_CXX
AC_LANG(C++)
dnl v--- needed if Makefile.am uses _LTLIBRARIES targets
AC_PROG_LIBTOOL

dnl v--- needed if Makefile.am uses lex sources
dnl AM_PROG_LEX

dnl
dnl for static-only libraries (non-libtool)
dnl
dnl AC_PROG_RANLIB

dnl
dnl substititions
dnl
AC_SUBST(FSM_IFLAGS)
AC_SUBST(FSM_OFLAGS)
AC_SUBST(FSM_LFLAGS)
AC_SUBST(FSM_WFLAGS)
AC_SUBST(FSM_LIBS)

CXXFLAGS_SAVE="$CXXFLAGS"
CPPFLAGS_SAVE="$CPPFLAGS"
LDFLAGS_SAVE="$LDFLAGS"
LIBS_SAVE="$LIBS"


dnl
dnl check for strdup
dnl
AC_CHECK_FUNC(strdup,[AC_DEFINE(HAVE_STRDUP,1,[Define this if you have the strdup() function])])



dnl
dnl check for zlib : headers
dnl
AC_ARG_WITH(zlib-include,
	AC_HELP_STRING([--with-zlib-include=DIR],
		       [specify location of zlib headers (default=none)]),
	[ZLIB_IFLAGS="-I$withval"])
if test -n "$ZLIB_IFLAGS" ; then
  FSM_IFLAGS="$IFLAGS $ZLIB_IFLAGS"
  CPPFLAGS="$CPPFLAGS $ZLIB_IFLAGS"
fi

dnl zlib: headers
for h in zlib.h ; do
  AC_CHECK_HEADER($h,
	[fsm_have_header="yes"], [fsm_have_header="no"])
  if test "$fsm_have_header" = "no" ; then
    AC_MSG_ERROR([required zlib header '$h' not detected])
  fi
done

dnl
dnl check for pthread
dnl
AC_ARG_WITH(pthread-include,
	AC_HELP_STRING([--with-pthread-include=DIR],
		       [specify location of pthread headers (default=none)]),
	[PTHREAD_IFLAGS="-I$withval"])
if test -n "$PTHREAD_IFLAGS" ; then
  FSM_IFLAGS="$IFLAGS $PTHREAD_IFLAGS"
  CPPFLAGS="$CPPFLAGS $PTHREAD_IFLAGS"
  #CXXFLAGS="$CXXFLAGS $PTHREAD_IFLAGS"
fi

dnl pthread: headers
for h in pthread.h ; do
  AC_CHECK_HEADER($h,
	[fsm_have_header="yes"], [fsm_have_header="no"])
  if test "$fsm_have_header" = "no" ; then
    AC_MSG_ERROR([required pthread header '$h' not detected])
  fi
done


dnl
dnl check for STL
dnl
AC_ARG_WITH(stl-include,
	AC_HELP_STRING([--with-stl-include=DIR],
		       [specify location of STL headers (default=/usr/local/include/stlport)]),
	[STL_INCDIR="$withval"],
	[STL_INCDIR="/usr/local/include/stlport"])

dnl
dnl STL: headers: update vars
dnl
if test "$STL_INCDIR" != "no" ; then
  FSM_IFLAGS="$FSM_IFLAGS -I$STL_INCDIR"
  CPPFLAGS="$CPPFLAGS -I$STL_INCDIR"
fi

dnl
dnl STL: headers
dnl
for h in hash_map ; do
  AC_CHECK_HEADER($h,[fsm_have_header="yes"],[fsm_have_header="no"])
  if test "$fsm_have_header" = "no" ; then
    AC_MSG_ERROR([could not find required STL header file '$h'])
  fi
done


dnl
dnl Bumble-Bee lex & yacc port
dnl

dnl bumble: headers
AC_ARG_WITH(bumble-include,
	AC_HELP_STRING([--with-bumble-include=DIR],
		       [specify location of libbumble headers (default=/usr/local/include/bumblelib)]),
	[BUMBLE_IFLAGS="-I$withval"],
	[BUMBLE_IFLAGS="-I/usr/local/include/bumblelib"])

dnl bumble: headers: update flags
FSM_IFLAGS="$FSM_IFLAGS $BUMBLE_IFLAGS"
CPPFLAGS="$CPPFLAGS $BUMBLE_IFLAGS"

dnl bumble: headers: compile
for h in clex.h cyacc.h ; do
  AC_CHECK_HEADER($h,[fsm_have_header="yes"],[fsm_have_header="no"])
  if test "$fsm_have_header" = "no" ; then
    AC_MSG_ERROR([could not find required Bumble-Bee header file '$h'])
  fi
done

dnl
dnl FSM libraries
dnl
AC_ARG_WITH(fsm-include,
	AC_HELP_STRING([--with-fsm-include=DIR],
		       [specify location of FSMlib headers (default=/usr/local/include/FSMlib)]),
	[FSMLIB_IFLAGS="-I$withval"],
	[FSMLIB_IFLAGS="-I/usr/local/include/FSMlib"])

dnl FSMlib: headers: update flags
FSM_IFLAGS="$FSM_IFLAGS $FSMLIB_IFLAGS"
CPPFLAGS="$CPPFLAGS $FSMLIB_IFLAGS"

dnl FSMlib: headers: compile
for h in FSM.h ; do
  AC_CHECK_HEADER($h,[fsm_have_header="yes"],[fsm_have_header="no"])
  if test "$fsm_have_header" = "no" ; then
    AC_MSG_ERROR([could not find required FSMlib header file '$h'])
  fi
done

dnl
dnl FSMlib: libraries
dnl
AC_ARG_WITH(fsm-libdir,
	AC_HELP_STRING([--with-fsm-libdir=DIR],
		       [specify location of FSMlib libraries (default=none)]),
	[FSMLIB_LFLAGS="-L$withval"],
	[FSMLIB_LFLAGS=""])

dnl AC_CHECK_LIB(FSMSymSpec,[FSMSymSpec::FSMSymSpec],
dnl	[FSMLIB_LIBS="-lFSMSymSpec"],[FSMLIB_LIBS=""])
dnl if test -z "$FSMLIB_LIBS" ; then
dnl  AC_ERROR([required library 'FSMSymSpec' not found.])
dnl fi
FSM_LIBS="-lFSM -lFSMSymSpec"



dnl
dnl check for flex++
dnl
AC_ARG_WITH([flexxx],
	AC_HELP_STRING([--with-flexxx=PATH],
		       [specify location of Alain Coetmeur's flex++]),
	[FLEXXX="$withval"])

if test -z "$FLEXXX" ; then
  dnl AC_MSG_CHECKING([for Alain Coetmeur's flex++])
  AC_PATH_PROG(FLEXXX,[flex++],[])
  if test -z "$FLEXXX" ; then
    AC_MSG_RESULT([not found])
    AC_MSG_WARN([cannot find Alain Coetmeur's flex++ -- CVS build will not work!])
  fi
fi
dnl LEX="$FLEXXX"
dnl AC_SUBST(LEX)
AC_SUBST(FLEXXX)

dnl
dnl check for bison++
dnl
AC_ARG_WITH([bisonxx],
	AC_HELP_STRING([--with-bisonxx=PATH],
		       [specify location of Alain Coetmeur's bison++]),
	[BISONXX="$withval"])
if test -z "$BISONXX" ; then
  dnl AC_MSG_CHECKING([for Alain Coetmeur's bison++])
  AC_PATH_PROG(BISONXX,[bison++],[])
  if test -z "$BISONXX" ; then
    AC_MSG_RESULT([not found])
    AC_MSG_WARN([cannot find Alain Coetmeur's bison++ -- CVS build will not work!])
  fi
fi
YACC="$BISONXX"
AC_SUBST(YACC)
AC_SUBST(BISONXX)


dnl
dnl check for gengetopt
dnl
AC_ARG_WITH([gengetopt],
	AC_HELP_STRING([--with-gengetopt=PATH],
		       [specify location of gengetopt]),
	[GENGETOPT="$withval"])
if test -z "$GENGETOPT" ; then
  AC_PATH_PROG(GENGETOPT,[gengetopt],[])
  if test -z "$GENGETOPT" ; then
    AC_MSG_RESULT([not found])
    AC_MSG_WARN([cannot find gengetopt program -- CVS build will not work!])
  fi
fi
AC_SUBST(GENGETOPT)



dnl
dnl documentation
dnl
AC_ARG_WITH(docdir,
	AC_HELP_STRING([--with-docdir=DIR],
		       [install documentation in DIR/dwdst (default=DATADIR/doc)]),
	[docdir="$withval"],[docdir="\${datadir}/doc"])

pkgdocdir="\${docdir}/\${PACKAGE}"
pkgdocprogdir="\${docdir}/\${PACKAGE}/programs"

AC_SUBST(docdir)
AC_SUBST(pkgdocdir)
AC_SUBST(pkgdocprogdir)

AC_ARG_WITH(doc-formats,
	AC_HELP_STRING([--with-doc-formats=LIST],
		       [Build documentation formats in LIST. \
                        Available formats: txt, man, html, dvi, ps, pdf, none.
	                Default='man html pdf']),
	[ac_cv_doc_formats="$withval"],[ac_cv_doc_formats="man html pdf"])

## -- un-comma-tize the doc-formats
dwdst_doc_formats=`echo "$ac_cv_doc_formats" | sed 's/\,/ /g'`


AC_ARG_ENABLE(doc,
	AC_HELP_STRING([--enable-doc],[Synonym for --with-doc-formats=none]),
	[enable_doc="$enableval"],[enable_doc="yes"])


AC_MSG_CHECKING([which documentation formats to build])
if test "$enable_doc" != "yes" ; then
 ### disable all docs
 dwdst_doc_formats="none"
fi
AC_MSG_RESULT($dwdst_doc_formats)
#echo ">> post RESULT"


if test "$dwdst_doc_formats" != "none" ; then
  ### docs: prog doxygen
  AC_PATH_PROG(DOXYGEN,doxygen,[])
  AC_SUBST(DOXYGEN)
  AC_SUBST(DOXYGEN_SOURCES)

  ### -- report doxygen-check results
  if test -z "$DOXYGEN" ; then
    AC_MSG_WARN([doxygen not found: library documentation will not be built!]) 
  fi

  ### docs: pod converters
  AC_PATH_PROG(POD2TEXT,pod2text,[])
  AC_PATH_PROG(POD2MAN,pod2man,[])
  AC_PATH_PROG(POD2HTML,pod2html,[])
  AC_PATH_PROG(POD2LATEX,pod2latex,[])
  AC_SUBST(POD2TEXT)
  AC_SUBST(POD2MAN)
  AC_SUBST(POD2HTML)
  AC_SUBST(POD2LATEX)

  ### -- docs: .gog file linkup
  dwdst_program_gogs="dwdst.gog dwdspp.gog dwdst-fstgen.gog dwdst-pargen.gog"
  for g in $dwdst_program_gogs ; do
    AC_CONFIG_LINKS(doc/programs/${g}:src/programs/${g})  
  done
  AC_SUBST(dwdst_program_gogs)


  ### -- initialize defaults
  DOC_SUBDIRS=""
  DOC_LATEX_TARGETS=""
  DOXY_WANT_HTML="NO"
  DOXY_WANT_MAN="NO"
  DOXY_WANT_LATEX="NO"

  for fmt in $dwdst_doc_formats ; do
    case "$fmt" in

      txt)
	if test -n "$POD2TEXT" ; then
	  DOC_PROG_TXT_TARGETS=`echo "$dwdst_program_gogs" | sed 's/\.gog/\.txt/g'`
	else
	  AC_MSG_WARN(pod2text not found -- program text docs will not be built!)
	fi
	;;

      man)
	if test -n "$DOXYGEN" ; then
	  DOXY_WANT_MAN="YES"
          DOC_MANDIRS="man/man3"
          DOC_MAN3_MANS="man/man3/*"
	fi
	if test -n "$POD2MAN" ; then
	  DOC_PROG_MAN_TARGETS=`echo "$dwdst_program_gogs" | sed 's/\.gog/\.1/g'`
	else
	  AC_MSG_WARN(pod2man not found -- program manpages will not be built!)
	fi
	;;

      html)
	if test -n "$DOXYGEN" ; then
          DOXY_WANT_HTML="YES"
          DOC_SUBDIRS="$DOC_SUBDIRS html"
	fi
	if test -n "$POD2HTML" ; then
	  DOC_PROG_HTML_TARGETS=`echo "$dwdst_program_gogs" | sed 's/\.gog/\.html/g'`
	else
	  AC_MSG_WARN(pod2html not found -- program html docs will not be built!)
	fi
	;;

      dvi)
	if test -n "$DOXYGEN" ; then
	  DOXY_WANT_LATEX="YES"
	  DOC_LATEX_TARGETS="${DOC_LATEX_TARGETS} refman.dvi"
	fi
	if test -n "$POD2LATEX" ; then
	  DOC_PROG_DVI_TARGETS=`echo "$dwdst_program_gogs" | sed 's/\.gog/\.dvi/g'`
	else
	  AC_MSG_WARN(pod2latex not found -- program dvi docs will not be built!)
	fi
	;;

      ps)
	if test -n "$DOXYGEN" ; then
	  DOXY_WANT_LATEX="YES"
	  DOC_LATEX_TARGETS="${DOC_LATEX_TARGETS} refman.ps"
	fi
	if test -n "$POD2LATEX" ; then
	  DOC_PROG_PS_TARGETS=`echo "$dwdst_program_gogs" | sed 's/\.gog/\.ps/g'`
	else
	  AC_MSG_WARN(pod2latex not found -- program postscript docs will not be built!)
	fi
	;;

      pdf)
	if test -n "$DOXYGEN" ; then
	  DOXY_WANT_LATEX="YES"
    	  DOC_LATEX_TARGETS="${DOC_LATEX_TARGETS} refman.pdf"
	fi
	if test -n "$POD2LATEX" ; then
	  DOC_PROG_PDF_TARGETS=`echo "$dwdst_program_gogs" | sed 's/\.gog/\.pdf/g'`
	else
	  AC_MSG_WARN(pod2latex not found -- program pdf docs will not be built!)
	fi
	;;

      *)
	AC_MSG_WARN(ignoring unknown documentation format: $fmt)
	;;
    esac; # case "$fmt" in ...
  done; # for fmt in $dwdst_doc_formats ...

  AC_SUBST(DOXY_WANT_HTML)
  AC_SUBST(DOXY_WANT_MAN)
  AC_SUBST(DOXY_WANT_LATEX)
  AC_SUBST(DOC_SUBDIRS)
  AC_SUBST(DOC_MANDIRS)
  AC_SUBST(DOC_MAN3_MANS)
  AC_SUBST(DOC_LATEX_TARGETS)
  AC_SUBST(POD_DOC_SUFFIXES)

  AC_SUBST(DOC_PROG_TXT_TARGETS)
  AC_SUBST(DOC_PROG_MAN_TARGETS)
  AC_SUBST(DOC_PROG_HTML_TARGETS)
  AC_SUBST(DOC_PROG_DVI_TARGETS)
  AC_SUBST(DOC_PROG_PS_TARGETS)
  AC_SUBST(DOC_PROG_PDF_TARGETS)

  # -- check for tag-files (this needs an overhaul!)
  AC_ARG_WITH(fsm-docdir,
	AC_HELP_STRING([--with-fsm-docdir=DIR],
		       [specify location of FSMlib docs (default=DOCDIR/FSMlib)]),
	[fsmdocdir="$withval"],[fsmdocdir="/usr/local/share/doc/FSMlib"])
  if test -n "$fsmdocdir" -a "$fsmdocdir" != "no" ; then
    ext=FSM
    if test -d "$fsmdocdir/$ext" -a -e "$fsmdocdir/$ext/$ext.tag" -a -d "$fsmdocdir/$ext/html"
    then DOXY_TAGFILES="$DOXY_TAGFILES $fsmdocdir/$ext/$ext.tag=$fsmdocdir/$ext/html"
    fi
    ext=FSMExt
    if test -d "$fsmdocdir/$ext" -a -e "$fsmdocdir/$ext/$ext.tag" -a -d "$fsmdocdir/$ext/html"
    then DOXY_TAGFILES="$DOXY_TAGFILES $fsmdocdir/$ext/$ext.tag=$fsmdocdir/$ext/html"
    fi
  fi
  AC_SUBST(DOXY_TAGFILES)   
fi; # if "$dwdst_doc_formats" != "none" ...


dnl
dnl debug ?
dnl
AC_MSG_CHECKING([whether to build debug version])
AC_ARG_ENABLE(debug,
	AC_HELP_STRING([--enable-debug],[build debug version (default=no)]))

if test "$enable_debug" == "yes" ; then
   AC_MSG_RESULT(yes)
   FSM_OFLAGS="-g"
else
  AC_MSG_RESULT(no)
  #FSM_OFLAGS="-O2"
  FSM_OFLAGS="-O3 -fomit-frame-pointer -funroll-loops -finline-limit-100000"
fi

dnl
dnl warnings ?
dnl
AC_MSG_CHECKING([whether to display compiler warnings])
AC_ARG_ENABLE(warnings,
	AC_HELP_STRING([--disable-warnings],[disable compiler warnings (default=no)]))

if test "$enable_warnings" != "no" ; then
   AC_MSG_RESULT(yes)
   FSM_WFLAGS="-Wall"
else
  AC_MSG_RESULT(no)
  FSM_WFLAGS=""
fi

dnl
dnl Restore user's *FLAGS
dnl
CXXFLAGS="$CXXFLAGS_SAVE"
CPPFLAGS="$CPPFLAGS_SAVE"
LDFLAGS="$LDFLAGS_SAVE"
LIBS="$LIBS_SAVE"
if test "$CXXFLAGS" = "-g -O2" ; then
  CXXFLAGS=""
fi


dnl
dnl output
dnl
AC_CONFIG_FILES(src/libdwdst/Makefile src/programs/Makefile src/Makefile)
AC_CONFIG_FILES(doc/libdwdst/libdwdst.doxy doc/libdwdst/Makefile)
AC_CONFIG_FILES(doc/programs/Makefile)
AC_CONFIG_FILES(doc/Makefile)
AC_CONFIG_FILES(config/Makefile)
AC_CONFIG_FILES(Makefile)
AC_OUTPUT
