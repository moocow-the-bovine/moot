=pod

README for package 'moot' (formerly 'dwdst')

Last updated for moot version 2.0.0pre3

=head1 DESCRIPTION

moot - moocow's part-of-speech tagger.

=head1 REQUIREMENTS

=over 4

=item STLport E<gt>= 4.5.3

Available from http://www.stlport.org

Only required for building with gcc-2.x.
You will have to set the environment variables
CPPFLAGS, LDFLAGS, and LIBS according to
your installation.


=item pkg-config

Available from:
http://www.freedesktop.org/software/pkgconfig/

To build from cvs, you will also need the pkg-config
autoconf macros which come with the source distribution
of pkg-config.


=item flex++ , bison++

Alain Coetmeur's C++ ports of the famous lexer/parser
generator pair, available from:
ftp://iecc.com/pub/file/bison++flex++
or
from the official distribution site of this package.

Tested with flex++-v2.3.8-4 and bison++-v1.21-5.




=head1 INSTALLATION

Issue the following commands to the shell:

 sh ./configure
 make
 make install

See the file INSTALL in the top-level distribution
directory for details.

=head1 BUILD FROM CVS

To build from CVS, you need the GNU utilities
aclocal, automake, autoconf, and libtool.  If
you have these, you can just run the top-level
script:

 sh ./autogen.sh

This will create the 'configure' script and other
necessary build files.

You will also need the Getopt::Gen perl module,
which should be available from wherever you acquired
these sources.


=head1 KNOWN BUGS

If you find one, let me know!


=head1 ACKNOWLEDGEMENTS

Development of this package was supported by the project
'Kollokationen im Wörterbuch'
("collocations in the dictionary", http://www.bbaw.de/forschung/kollokationen )
in association with the project
'Digitales Wörterbuch der deutschen Sprache des 20. Jahrhunderts (DWDS)'
("digital dictionary of the German language of the 20th century", http://www.dwds.de )
at the Berlin-Brandenburgische Akademie der Wissenschaften ( http://www.bbaw.de )
with funding from
the Alexander von Humboldt Stiftung ( http://www.avh.de )
and from the Zukunftsinvestitionsprogramm of the
German federal government.

I am grateful to Christiane Fellbaum, Alexander Geyken,
Thomas Hanneforth, Gerald Neumann, Edmund Pohl, Alexey Sokirko,
and others for offering useful insights in the course of development
of this package.

Thomas Hanneforth wrote and maintains the libFSM C++ library
for finite-state device operations
used in the development of the HMM tagger / disambiguator.

Alexander Geyken and Thomas Hanneforth developed the
rule-based morphological analysis system for German
which was used in the development and testing of the
class-based HMM tagger / disambiguator.

=head1 AUTHOR

Bryan Jurish E<lt>moocow@ling.uni-potsdam.deE<gt>

=cut
