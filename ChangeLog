ChangeLog for package moot

v2.0.0pre1 Sat, 29 May 2004 01:59:14 +0200
	+ added mootToken.h: mootToken, mootSentence interface classes
  	  - old string-based methods now deprecated
	+ added mootTokenLexer - replaces old 'mootTaggerLexer'
	  - parses new MorphConsole output (with TAB separators, at least)
	+ added mootTokenIO.h : classes mootToken(Reader|Writer)
	  - for file and/or string I/O in native format(s)
	+ (re-)added 'best-only' output as option to moothmm
	+ added best-tag marking with prefix '/' (and removed it again)
	+ fixed some smallish bugs in 'mootrain' causing
	  segfaults when:
	  - "--ngrams-only" or "--lex-only" were given
	  - training corpus filename contained no dot
	+ re-wrote mootNgrams, mootLexfreqs
	  - use nested maps for data: faster
	+ re-wrote mootHMMTrainer
	  - (kmax=3) now hard-coded in (use uni-, bi-, and trigrams)
	  - training from ambiguous data no longer possible
	+ fixed token-typification code (now in mootToken.h)
	  - should now be ca. 99.998% TnT-compatible with moot_TNT_COMPAT
	    macro defined (can't find the last bugger)
	  - Today's Most Annoying Undocumented Feature Award goes to
	    Thorsten Brants for failing to document TnT's (length<=3)
	    restriction for @CARDSUFFIX types
	+ reduced old mootCHMM to mootHMM (still untested)
	+ added class mootClassfreqs : raw class frequency counter (untested)
	+ added mootClassfreqs(Lexer|Parser|Compiler) for text
	  lexical-class parameter text I/O
	+ added section 5 manpage 'mootfiles' documenting various
	  file formats
	+ added class-counting to mootHMMTrainer (tests ok)
	+ added class compilation to mootHMM (tests ok)
	  - old mootHMM behavior can be emulated by achieved
	    by removing .clx (class-frequency) file
	+ CHMM behavior reduced to HMM tests OK (good ol' 95.67% correct)
	+ Todo:
	  - (added, untested) add & test binary I/O for mootClassfreqs
	  - rename 'moothmm' -> 'moot'
	  - move compilation / dump to a separate program 'mootcompile' ?
	  - add XML I/O (subclass of mootToken(Reader|Writer) ?)
	    ~ test effect of virtuals here
	
v1.0.5 Fri, 21 May 2004 14:14:31 +0200
  + extracting FSM dependencies to 'mootm' package
	
moot-v1.0.4 Fri, 12 Dec 2003 02:06:59 +0100
  + renamed from 'dwdst' to 'moot'
  + added additional detection routines for libFSM >= v0.1.1.1
  + added --disable-fsm flag to ./configure
  + added placebo classes methods in src/libmoot/mootFSM.h
	- now compiles without libFSM: nothing much interesting works,
	  but at least it compiles...
	
v1.0.3 Tue,  2 Dec 2003 02:13:52 +0100
  + changes for compilation with g++-3.2
    - removed many redundant param-default specifications in non-prototype declarations
    - liberally sprinkled 'typename' keywords where g++ requested them
    - removed 'dopen()' method from [io]ccBinStream -- looks like
      there's no good way to make c++ streams jive with fds: ugly but true.
  + NOTE:
    - problems compiling on helios (RedHat) with a newer version
	of bison++ (i.e. not my 'flex++bison++' package) -- g++ eventually
	pukes with a complaint about 'YY_BUFFER_STATE' not being a defined
	type.  SOLUTION: dropping in 'flexskel.*', 'bison.*' from the native
	flex++ / bison++ distribution(s) seems to have fixed things.
	
v1.0.2 Mon, 25 Aug 2003 04:04:44 +0200
  + added mootHMMTrainer class and executable 'mootrain'
	- names may change to speed things up for fully supervised training
	  with kmax=3
	- Even this API still needs some way to handle unknown tokens for
	  n-gram generation...
  + added namespace 'moot', shoved everything I could into it
	- still global: flex++/bison++ lexers/parsers
	  * couldn't get namespaces to work with these - got
	    alleged conflicts with stdio.h
  + wrote many docs
  + STILL todo:
	- missing a decent string API for mootCHMM ...
	- get GenGetopt::cmdline_[ch] to stop complaining about
	  command-lines overriding config-files...


v1.0.1 Sun, 24 Aug 2003 00:37:25 +0200
  + (mootCHMM::TagMorphMap)s now handled as pointers, analysis-sets
    are stored with corresponding tags in the state-table
  + Added top-level interface structure (mootHMM::ViterbiPathNode*)
  + Still missing:
	- string-set interface to mootCHMM::viterbi_step()
	- *HMM::can_flush() , *HMM::viterbi_flush()
	  ~ ought to be easy to implement
	
v1.0.0 Thu, 21 Aug 2003 13:37:21 +0200
  + new class for morphological analysis: 'mootMorph'
  + new user program for morphology only: 'dwdsm' (replaces old 'moot')
  + new class for morphologically-aware disambiguation: 'mootCHMM'
  + re-wrote 'moot': now uses 'mootCHMM' as base class
  + wrote binary load/save routines for 'mootHMM', 'mootCHMM'
  + added tag-extraction hook-FST to 'mootMorph'
	- just using an identity-FST slows us down ca. 50%
	- maybe fixing a libFSM bug preventing FSA->compose(FST)
	  would help here...
  + tried new morphology, with abominable (accuracy=70%) results
  + TODO:
	- fix new morphology (argh)
	- enable pre-computed tagsets in input files in mootCHMM
	  as for mootHMM (parse dwdsm "TAG:ANALYSIS" format?!)
	  * looks like a job for POSIX regexes...
	- write perl-XS interface
	
v1.0.0_pre4 Thu, 14 Aug 2003 17:55:48 +0200
  + corrected '-q' syntax for moot, optimized 
    mootTagger::symbol_vector_to_string_dq() method.
  + added class 'mootHMM' for HMM-style tagging/disambiguation
	
Wed Nov 13 16:02:33 CET 2002
  + updated for FSMlib v0.1.0
