# -*- Mode: Shell-Script -*-
#
# Getopt::Gen specification for moot
#-----------------------------------------------------------------------------
program "mootrain"
#program_version "0.01"

purpose	"moocow's part-of-speech tagger : HMM trainer"
author  "Bryan Jurish <moocow@cpan.org>"
on_reparse "warn"

#-----------------------------------------------------------------------------
# Details
#-----------------------------------------------------------------------------
details "
'mootrain' gathers training data for the HMM part-of-speech tagger
used by the 'moot' program  from a tagged training corpus.
The training
corpus should be in 'medium' (+tagged,-analyzed) or 'well done'
(+tagged,+analyzed) format.  The output file(s) are text-format
raw frequency models.

See L<mootfiles> for details on moot file formats.
"

#-----------------------------------------------------------------------------
# Files
#-----------------------------------------------------------------------------
rcfile "/etc/mootrainrc"
rcfile "~/.mootrainrc"


#-----------------------------------------------------------------------------
# Arguments
#-----------------------------------------------------------------------------
argument "INPUT(s)" "Tagged input corpus file(s)." \
    details="
Input files should be 'medium' (+tagged,-analyzed)
or 'well done' (+tagged,-analyzed).

See L<mootfiles> for details on moot file formats.
"

#-----------------------------------------------------------------------------
# Options
#-----------------------------------------------------------------------------
group "Basic Options"
int "verbose" v "Verbosity level." \
    arg="LEVEL" \
    default="2" \
    details="Be more or less verbose.  Recognized values are in the range 0..3."

string "output" o "Specify basename for output files (default=INPUT)"

string "input-format" I "Specify input file(s) format(s)." \
    arg="FORMAT" \
    details="
Value should be a comma-separated list of format flag names,
optionally prefixed with an exclamation point (!) to indicate
negation.

Default='WellDone'

Implied='Tagged'

See 'I/O Format Flags' in L<mootfiles> for details.
"

string "input-encoding" - "Override document encoding for XML input." \
    arg="ENCODING" \
    details="
Potentially useful for XML documents without encoding declarations.
"

#-----------------------------------------------------------------------------
# Model Format Options
#-----------------------------------------------------------------------------

group "Model Format Options"

flag "lex" l "Generate only lexical frequency file." \
    default="0"

flag "ngrams"	n "Generate only n-gram frequency file." \
    default="0"

flag "classes"	C "Generate only lexical-class frequency file." \
    default="0"

string "eos-tag" e "Specify boundary tag (default=__$)" \
  arg="TAG" \
  default="__$" \
  details="
This is the pseudo-tag used in the n-gram model file to represent
sentence boundaries, both beginning- and end-of-sentence.  It should
not be an element of the actual tag-set -- that is, it should not
be a valid analysis for any token.
"

flag "verbose-ngrams" N "Generate long-form ngrams (default=no)"


string "flavors" f "Use flavor heuristics from FILE (default=built-in)." \
    arg="FILE" \
    default=NULL \
    details="
If specified, FILE should be a list of token classification rules, one rule per line,
in order of decreasing precedence.
Each line is a TAB-separated list whose first field is a symbolic flavor label (conventionally
beginning with the character '@'), and whose second field is a regular expression.
"

flag "no-flavors" F "Don't use any flavor heuristics at all." \
    default=0 \
    details="
If specified, flavor heuristics will not be used at all.
Note that in this case, you can still specify either built-in or user-defined flavors
to L<moot(1)|moot> or L<mootcompile(1)|mootcompile>.
"

double "unknown-threshhold" t "Freq. threshhold for 'unknown' lexical probabilities" \
  arg="FLOAT" \
  default="1.0" \
  details="
Setting this option here will case a special @UKNOWN entry to be added to the
lexical frequency model file.  Note that such an entry will be overriden
during model compilation if you specify a non-zero unknown lexical threshhold
to L<moot(1)|moot> or L<mootcompile(1)|mootcompile>.
"

#---------------------------------------------------
# XML options
#---------------------------------------------------
#group "XML Options"


#-----------------------------------------------------------------------------
# Addenda
#-----------------------------------------------------------------------------
#addenda ""

#-----------------------------------------------------------------------------
# Bugs
#-----------------------------------------------------------------------------
bugs "

Only ca. 99.998% compatible with tnt-para(1), due to token-typification
strangeness.

"

#-----------------------------------------------------------------------------
# Footer
#-----------------------------------------------------------------------------
acknowledge `cat acknowledge.pod`

seealso "
L<mootfiles>,
mootm(1),
L<mootcompile>,
L<moot>
"
