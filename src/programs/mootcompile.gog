# -*- Mode: Shell-Script -*-
#
# Getopt::Gen specification for mootcompile
#-----------------------------------------------------------------------------
program "mootcompile"
#program_version "0.01"

purpose	"moocow's HMM part-of-speech tagger/disambiguator: model compiler."
author  "Bryan Jurish <moocow@ling.uni-potsdam.de>"
on_reparse "warn"

#-----------------------------------------------------------------------------
# Details
#-----------------------------------------------------------------------------
details "
'mootcompile' compiles binary Hidden Markov Model parameter
files for use with the 'moot(1)' program
from one or more text model files.

See L<mootfiles> for details on moot model file formats.
"

#-----------------------------------------------------------------------------
# Files
#-----------------------------------------------------------------------------
rcfile "/etc/mootcompilerc"
rcfile "~/.mootcompilerc"


#-----------------------------------------------------------------------------
# Arguments
#-----------------------------------------------------------------------------
argument "MODEL(s)" "Text-format input models." \
    details="
For details on moot file formats, see L<mootfiles>.
"

#-----------------------------------------------------------------------------
# Options
#-----------------------------------------------------------------------------
#group "Basic Options"
int "verbose" v "Verbosity level." \
    arg="LEVEL" \
    default="2" \
    details="Be more or less verbose.  Recognized values are in the range 0..3."

string "output"	o "Specify output file (default=stdout)." \
    arg="FILE" \
    default="-" \
    details="
Binary model will be written to FILE.
"

int "compress" z "Compression level for output file." \
    arg="LEVEL" \
    default="-1"

#-----------------------------------------------------------------------------
# HMM Options
#-----------------------------------------------------------------------------

group "HMM Options"

int "use-classes" L "Whether to use lexical class-probabilities." \
    arg="BOOL" \
    default="1" \
    details="
Only useful if your file contains a priori analyses.
Default behavior is to try and use classes if you specify
a non-empty class-frequency file.
"

string "nlambdas" N "N-Gram smoothing constants (default=estimate)" \
  arg="LAMBDAS" \
  details="
LAMBDAS should be a string of the form \"LAMBDA1,LAMBDA2\"
(without the quotes).

LAMBDA_1 is the constant smoothing coefficient for unigram probabilities,
LAMBDA_2 is the constant smoothing coefficient for bigram probabilities.

If you override the default values, you should choose values such that
LAMBDA_1 + LAMBDA_2 == 1.0.
"

string "wlambdas" W "Lexical smoothing constants (default=estimate)" \
  arg="LAMBDAS" \
  details="
LAMBDAS should be a string of the form \"LAMBDA_W,EPSILON_W\"
(without the quotes).

LAMBDA_W is the constant smoothing coefficient for lexical probabilities.
EPSILON_W is the constant minimum lexical probability.

If you override the default values, you should choose values such that
LAMBDA_W + EPSILON_W == 1.0.
"

double "unknown-threshhold" T "Freq. threshhold for 'unknown' lexical probabilities" \
  arg="FLOAT" \
  default="1.0" \
  details="
Lexical probabilities for unknown tokens in the input are estimated
from tokens which occur at most FLOAT times in the model.
"

double "class-threshhold" X "Freq. threshhold for 'unknown' class probabilities" \
  arg="FLOAT" \
  default="1.0" \
  details="
Class probabilities for unrecognized tokens  in the input are estimated
from classes which occur at most FLOAT times in the model
and/or from the empty class.
"

string "unknown-token" u "Symbolic name of the 'unknown' token" \
  arg="NAME" \
  default="@UNKNOWN" \
  details="
You can use this value to include lexical frequency information
for unknown input tokens in the lexical model file.
"

string "unknown-tag" U "Symbolic name of the 'unknown' tag" \
  arg="NAME" \
  default="UNKNOWN" \
  details="You should never see or need this tag."

string "eos-tag" e "Specify boundary tag (default=__$)" \
  arg="TAG" \
  default="__$" \
  details="
This is the pseudo-tag used in the n-gram model file to represent
sentence boundaries, both beginning- and end-of-sentence.  It should
not be an element of the actual tag-set -- that is, it should not
be a valid analysis for any token.
"

#-----------------------------------------------------------------------------
# Addenda
#-----------------------------------------------------------------------------
#addenda ""

#-----------------------------------------------------------------------------
# Bugs
#-----------------------------------------------------------------------------
bugs "

None known.

"

#-----------------------------------------------------------------------------
# Footer
#-----------------------------------------------------------------------------
acknowledge `cat acknowledge.pod`

seealso "
L<mootfiles>
mootm(1),
L<mootrain>,
L<mootdump>,
L<moot>
"
