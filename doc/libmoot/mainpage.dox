/* -*- Mode: C++ -*- */
/** 
\mainpage libmoot: moocow's PoS tagging library

\author Bryan Jurish <moocow@ling.uni-potsdam.de>

\version 2.0.0pre3


\section Intro Introduction

libmoot is a C++ library for Part-of-Speech (PoS) tagging.
In addition to traditional bigram tagging routines, libmoot
allows the use of user-specified a priori sets of possible analyses
for each input token ("lexical classes"), which has been shown
to lead to a reduction in errors of up to 21% with respect
to traditional Hidden-Markov-Model (HMM) methods.



\section PP Preprocessing

libmoot includes a rudimentary preprocessor for raw text,
which tokenizes an input stream, and eliminates most SGML
markup.

\see mootPPLexer
\see <A HREF="../../programs/mootpp.html">mootpp(1)</A>


\section HMM HMM Tagging

The \link moot::mootHMM mootHMM\endlink class provides
a fast interface to traditional HMM tagging and disambiguation,
optionally extended by lexical-class probabilities, which can be
helpful if you have some prior information on what sorts of
tags your input tokens might in fact happen to carry.

\see \link moot::mootHMM mootHMM\endlink
\see <A HREF="../../programs/mootrain.html">mootrain(1)</A>
\see <A HREF="../../programs/moothmm.html">moot(1)</A>




\section Ack Acknowledgements

Development of this package was supported by the project
<A HREF="http://www.bbaw.de/forschung/kollokationen">Kollokationen im Wörterbuch</A>
("collocations in the dictionary")
in association with the project
<A HREF="http://www.dwds.de">Digitales Wörterbuch der deutschen Sprache des 20. Jahrhunderts(DWDS)</A>
("digital dictionary of the German language")
at the
<A HREF="http://www.bbaw.de">Berlin-Brandenburgische Akademie der Wissenschaften</A>
with funding from the
<A HREF="http://www.avh.org">Alexander von Humboldt Stiftung</A>
and from the
Zukunftsinvestitionsprogramm of the German federal government.

I am grateful to Christiane Fellbaum, Alexander Geyken,
Thomas Hanneforth, Gerald Neumann, Edmund Pohl, Alexey Sokirko, and others
for offering useful insights in the course of development
of this package.

Thomas Hanneforth wrote and maintains the libFSM C++ library
for finite-state device operations used in the development
of the class-based HMM tagger / disambiguator.

Alexander Geyken and Thomas Hanneforth developed the
rule-based morphological analysis system for German
which was used in the development and testing of the
class-based HMM tagger / disambiguator.


\section SeeAlso More Information

\see FSM
\see <A HREF="../../programs/mootpp.html">mootpp(1)</A>
\see <A HREF="../../programs/mootm.html">mootm(1)</A>
\see <A HREF="../../programs/mootrain.html">mootrain(1)</A>
\see <A HREF="../../programs/moot.html">moot(1)</A>
\see <A HREF="../../programs/mooteval.html">mooteval(1)</A>

\todo Write Perl interface.

*/
