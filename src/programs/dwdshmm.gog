# -*- Mode: Shell-Script -*-
#
# Getopt::Gen specification for dwdst
#-----------------------------------------------------------------------------
program "dwdshmm"
#program_version "0.01"

purpose	"HMM Part-of-Speech tagger/disambiguator for the KDWDS project."
author  "Bryan Jurish <moocow@ling.uni-potsdam.de>"
on_reparse "warn"

#-----------------------------------------------------------------------------
# Details
#-----------------------------------------------------------------------------
details "
'dwdst' is a Hidden Markov Model (HMM) Part-of-Spech (PoS)
tagger / disambiguator program based on the 'libdwdst' library.
"

#-----------------------------------------------------------------------------
# Files
#-----------------------------------------------------------------------------
rcfile "/etc/dwdshmmrc"
rcfile "~/.dwdshmmrc"


#-----------------------------------------------------------------------------
# Arguments
#-----------------------------------------------------------------------------
argument "INPUT(s)" "Input files / file-lists." \
    details="See the '--list' option."

#-----------------------------------------------------------------------------
# Options
#-----------------------------------------------------------------------------
#group "Basic Options"
int "verbose" v "Verbosity level." \
    arg="LEVEL" \
    default="2" \
    details="Be more or less verbose.  Recognized values are in the range 0..3."

#flag  "words"  w  "INPUTs are input tokens, not filenames." \
#    details="Useful for testing."

flag  "list"   l  "INPUTs are file-lists, not filenames." \
    details="Useful for large batch-processing jobs."

string "output"	o "Specify output file (default=stdout)." \
    arg="FILE" \
    default="-"

#---------------------------------------------------
# Output format options
#---------------------------------------------------
#group "Output Format Options"

#flag "avm"       a "Produce AVM ('vector') output." \
#    details="Ambiguous-mode only"

#-----------------------------------------------------------------------------
# Compilation Options
#-----------------------------------------------------------------------------

group "Compilation Options"

string "compile" C "Compile binary HMM model file." \
  arg="BINMODEL" \
  details="
Do not perform tagging, but compile the binary model
file BINMODEL from the specified parameters, and then exit.

See L<Model Files> for details.
"

int "compress" z "Compression level for compile-mode." \
    arg="LEVEL" \
    default="-1"

flag "dump" D "Produce a text dump of the compiled HMM." \
    details="
For debugging.
"

#-----------------------------------------------------------------------------
# HMM Options
#-----------------------------------------------------------------------------

group "HMM Options"

string "model" M "Use HMM model file(s) MODEL." \
  arg="MODEL" \
  default="dwdshmm" \
  details="See L<Model Files> for details."

string "nlambdas" N "N-Gram smoothing constants (default=estimate)" \
  arg="LAMBDAS" \
  details="
LAMBDAS should be a string of the form \"LAMBDA1,LAMBDA2\"
(without the quotes).

LAMBDA_1 is the constant smoothing coefficient for unigram probabilities,
LAMBDA_2 is the constant smoothing coefficient for bigram probabilities.

If you override the default values, you should choose values such that
LAMBDA_1 + LAMBDA_2 == 1.0.
"

string "wlambdas" W "Lexical smoothing constants (default=estimate)" \
  arg="LAMBDAS" \
  details="
LAMBDAS should be a string of the form \"LAMBDA_W,EPSILON_W\"
(without the quotes).

LAMBDA_W is the constant smoothing coefficient for lexical probabilities.
EPSILON_W is the constant minimum lexical probability.

If you override the default values, you should choose values such that
LAMBDA_W + EPSILON_W == 1.0.
"

double "unknown-threshhold" T "Frequency threshhold for 'unknown' lexical probabilities" \
  arg="FLOAT" \
  default="1.0" \
  details="
Lexical probabilities for unknown tokens in the input are estimated
from tokens which occur at most FLOAT times in the model.
"

string "unknown-token" u "Symbolic name of the 'unknown' token" \
  arg="NAME" \
  default="@UNKNOWN" \
  details="
You can use this value to include lexical frequency information
for unknown input tokens in the lexical model file.
"

string "unknown-tag" U "Symbolic name of the 'unknown' tag" \
  arg="NAME" \
  default="UNKNOWN" \
  details="You should never see or need this tag."

string "eos-tag" e "Specify boundary tag (default=__$)" \
  arg="TAG" \
  default="__$" \
  details="
This is the pseudo-tag used in the n-gram model file to represent
sentence boundaries, both beginning- and end-of-sentence.  It should
not be an element of the actual tag-set -- that is, it should not
be a valid analysis for any token.
"

#-----------------------------------------------------------------------------
# Addenda
#-----------------------------------------------------------------------------
addenda "

=head2 Model Files

The dwdsthmm program can use either text- or native binary-format model files,
and may also be used (with the '--compile' option) to compile a binary
mode file from the model specified on the command-line.
See L<Text Models> or L<Binary Models> for details on the individual
model formats.


=head2 Text Models

A \"Text Model\" TMODEL is completely defined by a pair of files
'TMODEL.lex' and 'TMODEL.123' (see below for details on these files).
When specifiying a text model with the '--model' option, you may
specifiy:

  --model=TMODEL

in order to use the files 'TMODEL.lex' and 'TMODEL.123',
or you may specify the component model files individually, by:

  --model=TMODEL.lex,TMODEL.123

Be aware that the existence of a binary model file 'TMODEL' will
cause the binary model to be used instead.

=over 4

=item TMODEL.lex

Is a lexical frequency file in the format generated by
the dwdstrain(1) program.  The special tokens

 @CARD
 @CARDPUNCT
 @CARDSUFFIX
 @CARDSEPS
 @UNKNOWN

which may occur in the file should be ignored.

=item TMODEL.123

Is a uni-, bi-, and tri-gram frequency file in the
format generated by the dwdstrain(1) program.
The boundary tag (see the '--eos-tag' option) should be correctly
handled.

=back



=head2 Binary Models

A \"Binary Model\" BINMODEL is a (compressed) binary format
file storing all required model information.  It is completely
specified by its filename 'BINMODEL'.

When specifiying a binary model with the '--model' option, just
specifiy:

  --model=BINMODEL

in order to use the file 'BINMODEL' as a binary model file.
This overrides any text models which might exist with names
'BINMODEL.lex' and 'BINMODEL.123'.

"

#-----------------------------------------------------------------------------
# Bugs
#-----------------------------------------------------------------------------
bugs "

None known.

"

#-----------------------------------------------------------------------------
# Footer
#-----------------------------------------------------------------------------
acknowledge "

This package was developed as part of the DWDS/Collocations project
('Kollokationen im digitalen W\"orterbuch deutscher Sprache'
= 'collocations in the digital dictionary of the German language') at the
Berlin-Brandenburgische Akademie der Wissenschaften.
For details on the DWDS project, visit: http://www.dwds.de.

"

seealso "L<dwdspp>, L<dwdstrain>, L<dwdsm>, L<dwdst>"
